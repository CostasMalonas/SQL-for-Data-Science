Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = user_id:3979
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:
	SELECT COUNT(*)
		FROM user
		WHERE id IS NULL OR 
		  name IS NULL OR 
		  review_count IS NULL OR 
		  yelping_since IS NULL OR
		  useful IS NULL OR 
		  funny IS NULL OR 
		  cool IS NULL OR 
		  fans IS NULL OR 
		  average_stars IS NULL OR 
		  compliment_hot IS NULL OR 
		  compliment_more IS NULL OR 
		  compliment_profile IS NULL OR 
		  compliment_cute IS NULL OR 
		  compliment_list IS NULL OR 
		  compliment_note IS NULL OR 
		  compliment_plain IS NULL OR 
		  compliment_cool IS NULL OR 
		  compliment_funny IS NULL OR 
		  compliment_writer IS NULL OR 
		  compliment_photos IS NULL 
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:5		avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1.0		max:5.0		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000		avg:24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer: 
	SELECT city, COUNT(review_count) AS summary FROM business
	GROUP BY city ORDER BY summary DESC
	
	
	Copy and Paste the Result Below:
	+-----------------+---------+
	| city            | summary |
	+-----------------+---------+
	| Las Vegas       |    1561 |
	| Phoenix         |    1001 |
	| Toronto         |     985 |
	| Scottsdale      |     497 |
	| Charlotte       |     468 |
	| Pittsburgh      |     353 |
	| Montréal        |     337 |
	| Mesa            |     304 |
	| Henderson       |     274 |
	| Tempe           |     261 |
	| Edinburgh       |     239 |
	| Chandler        |     232 |
	| Cleveland       |     189 |
	| Gilbert         |     188 |
	| Glendale        |     188 |
	| Madison         |     176 |
	| Mississauga     |     150 |
	| Stuttgart       |     141 |
	| Peoria          |     105 |
	| Markham         |      80 |
	| Champaign       |      71 |
	| North Las Vegas |      70 |
	| North York      |      64 |
	| Surprise        |      60 |
	| Richmond Hill   |      54 |
	+-----------------+---------+
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer: 
	
	SELECT stars, COUNT(stars) AS count FROM business 
	WHERE city = 'Avon' 
	GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns β star rating and count):
+-------+-------+
| stars | count |
+-------+-------+
|   1.5 |     1 |
|   2.5 |     2 |
|   3.5 |     3 |
|   4.0 |     2 |
|   4.5 |     1 |
|   5.0 |     1 |
+-------+-------+


ii. Beachwood

SQL code used to arrive at answer:
	
	SELECT stars, COUNT(stars) AS count FROM business 
	WHERE city = 'Beachwood' GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns β star rating and count):
+-------+-------+
| stars | count |
+-------+-------+
|   2.0 |     1 |
|   2.5 |     1 |
|   3.0 |     2 |
|   3.5 |     2 |
|   4.0 |     1 |
|   4.5 |     2 |
|   5.0 |     5 |
+-------+-------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
	SELECT id, name, review_count FROM user 
	ORDER BY review_count DESC 
	LIMIT 3
	
		
	Copy and Paste the Result Below:
	+------------------------+--------+--------------+
	| id                     | name   | review_count |
	+------------------------+--------+--------------+
	| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
	| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
	| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
	+------------------------+--------+--------------+
		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
	Yes, but also the amount of time that they have been yelping. The longer they 
	have been yelping and the more reviews they give has a higher fan count.	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: There are more reviews with the word "love"

	
	SQL code used to arrive at answer:

	SELECT COUNT(*) AS count FROM review WHERE text LIKE "%love%"

	SELECT COUNT(*) AS count FROM review WHERE text LIKE "%hate%"

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	SELECT id, name, fans FROM user ORDER BY fans DESC LIMIT 10

	
	Copy and Paste the Result Below:
	+------------------------+-----------+------+
	| id                     | name      | fans |
	+------------------------+-----------+------+
	| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
	| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
	| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
	| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
	| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
	| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
	| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
	| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
	| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
	| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
	+------------------------+-----------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

	The 4-5 star group seems to have shorter hours then the 2-3 star group.
	

ii. Do the two groups you chose to analyze have a different number of reviews?
	They have a little difference but they are about the same
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
	No, every business is in a different zip-code.

SQL code used for analysis:
	
	SELECT city, stars, COUNT(review_count),COUNT(stars), hours 
	FROM business b
	INNER JOIN category c
	ON b.id = c.business_id INNER JOIN hours h ON c.business_id = h.business_id
	WHERE category = 'Shopping' GROUP BY review_count, stars

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
		The businesses that are open tend to have more reviews than ones that
		are closed on average.
         
         
ii. Difference 2:
         	The average star rating is higher for businesses that are open than
		businesses that are closed.
         
         
SQL code used for analysis:
		SELECT COUNT(DISTINCT(id)),
			   AVG(review_count),
			   SUM(review_count),
			   AVG(stars),
			   is_open
		FROM business
		GROUP BY is_open




	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do: 
Showing which city has the best businesses according to the total number of stars.
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
I need the city of each business from the business table and the stars of each review from the review table.
Also I will add the stars each city has and find the total which I will save in a new column called total_stars.
Then I will make an inner join on the id of each business and the business id at the review table.
At the end I will group the result according to the city and I will order it at a descending format according
to the number of the stars.

                           
                  
iii. Output of your finished dataset:
+-----------------+-------------+
| city            | total_stars |
+-----------------+-------------+
| Las Vegas       |         747 |
| Phoenix         |         229 |
| Toronto         |         185 |
| Scottsdale      |         154 |
| Henderson       |         114 |
| Tempe           |         108 |
| Pittsburgh      |          94 |
| Chandler        |          77 |
| Charlotte       |          67 |
| Montréal        |          67 |
| Madison         |          61 |
| Gilbert         |          57 |
| Mesa            |          50 |
| Cleveland       |          43 |
| Edinburgh       |          20 |
| Lakewood        |          20 |
| North Las Vegas |          19 |
| Champaign       |          15 |
| Glendale        |          15 |
| Cave Creek      |          14 |
| North York      |          14 |
| Surprise        |          12 |
| Goodyear        |          10 |
| Markham         |          10 |
| Matthews        |          10 |
+-----------------+-------------+
(Output limit exceeded, 25 of 67 total rows shown)
         
         
iv. Provide the SQL code you used to create your final dataset: 
	SELECT b.city, SUM(r.stars) AS total_stars FROM business b 
	INNER JOIN review r ON b.id = r.business_id
	GROUP BY b.city ORDER BY total_stars DESC